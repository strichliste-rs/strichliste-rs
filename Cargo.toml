[dependencies]
leptos = {version = "0.8.8"}
leptos_router = {version = "0.8.6"}
axum = {version = "0.8.4", optional = true}
console_error_panic_hook = {version = "0.1", optional = true}
leptos_axum = {version = "0.8.6", optional = true}
leptos_meta = {version = "0.8.5"}
tokio = {version = "1", features = ["rt-multi-thread"], optional = true}
wasm-bindgen = {version = "=0.2.100", optional = true}
sqlx = {version = "0.8.5", features = ["runtime-tokio", "sqlite", "chrono"], optional = true}
tracing = "0.1.41"
clap = {version = "4.5.38", features = ["derive"], optional = true}
tracing-subscriber = {version = "0.3.19", optional = true}
serde = {version = "1.0.219", features = ["derive"]}
reactive_stores = "0.2.2"
leptos-use = {version = "0.16.2", features = ["use_web_notification", "use_infinite_scroll"]}
chrono = {version = "0.4.41", features = ["serde"]}
futures = {version = "0.3.31", optional = true}
itertools = {version = "0.14.0"}
config = {version = "0.15.15", optional = true}
rand = {version = "0.9.2", optional = true}
thiserror = "2.0.16"
thaw = {version = "0.5.0-beta"}

[features]
hydrate = [
  "leptos/hydrate",
  "dep:console_error_panic_hook",
  "dep:wasm-bindgen",
  "thaw/hydrate"
]
ssr = [
  "dep:axum",
  "dep:tokio",
  "dep:leptos_axum",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:sqlx",
  "dep:clap",
  "dep:tracing-subscriber",
  "dep:futures",
  "dep:config",
  "dep:rand",
  "thaw/ssr"
]
sqlx = ["dep:sqlx"]
clap = ["dep:clap"]
tracing-subscriber = ["dep:tracing-subscriber"]
futures = ["dep:futures"]
config-rs = []
config = ["dep:config"]
random = []
rand = ["dep:rand"]

[lib]
crate-type = ["cdylib", "rlib"]

[package]
name = "strichliste-rs"
version = "0.1.0"
edition = "2021"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "strichliste-rs"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
# [Windows] for non-WSL use "npx.cmd playwright test"
# This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
# The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]
# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false
# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]
# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
tailwind-input-file = "src/frontend/style/input.css"
tailwind-config-file = "src/frontend/style/tailwind.config.js"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"
